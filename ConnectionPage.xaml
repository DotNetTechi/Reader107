<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:IDT_Reader"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Class="IDT_Reader.ConnectionPage"
        mc:Ignorable="d"
        Title="ConnectionPage" Height="851" Width="1538.05">
    <Window.Resources>
        <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121"/>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <!-- Outer Circle -->
                            <Border 
                        x:Name="radioButtonBorder" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="2" 
                        Background="{TemplateBinding Background}" 
                        CornerRadius="100" 
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                        Margin="2" 
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                        Width="24" 
                                Height="24">
                                <!-- Set desired height -->
                                <Grid x:Name="markGrid" Margin="4">
                                    <!-- Inner Circle -->
                                    <Ellipse 
                                x:Name="optionMark" 
                                Fill="#0070AE"
                                        Width="12"
                                        Height="12" 
                                Opacity="0"/>
                                </Grid>
                            </Border>
                            <!-- Content -->
                            <ContentPresenter 
                        x:Name="contentPresenter" 
                        Grid.Column="1" 
                        Focusable="False" 
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                        Margin="{TemplateBinding Padding}" 
                        RecognizesAccessKey="True" 
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="#0070AE"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="#0070AE"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="#0070AE"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <!-- ToggleButton with a custom style -->
                            <ToggleButton x:Name="ToggleButton"
                                          Grid.Column="2"
                                          Focusable="false"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border Background="White"
                                                BorderBrush="#D9D9D9"
                                                BorderThickness="1"
                                                CornerRadius="30">
                                            <Grid>
                                                <!-- Image for the dropdown icon -->
                                                <Image Source="/Images/dropdownArrow.png"
                                                       Width="25"
                                                       Height="20"
                                                       HorizontalAlignment="Right"
                                                       VerticalAlignment="Center"
                                                                        Margin="0,0,15,0"/>
                                            </Grid>
                                        </Border>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>

                            <!-- ContentPresenter for displaying the selected item -->
                            <ContentPresenter x:Name="ContentSite"
                                              IsHitTestVisible="False"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              Margin="5"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left" />

                            <!-- Popup for dropdown items -->
                            <Popup x:Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Border x:Name="DropDownBorder"
                                        Background="White"
                                        BorderBrush="Gray"
                                        BorderThickness="1"
                                        CornerRadius="5"
                                        Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ScrollViewer>
                                        <StackPanel IsItemsHost="True"
                                                    KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>

        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            CornerRadius="4" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="1" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" 
      Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z" 
      Fill="{StaticResource OptionMark.Static.Glyph}" 
      Margin="1" 
      Opacity="0" 
      Stretch="Uniform"
      Height="16"
      Width="16">
                                        <Path.RenderTransform>
                                            <ScaleTransform ScaleX="1.5" ScaleY="1.5" CenterX="0" CenterY="0"/>
                                        </Path.RenderTransform>
                                    </Path>
                                    <Rectangle x:Name="indeterminateMark" 
                                       Fill="{StaticResource OptionMark.Static.Glyph}" 
                                       Margin="2" 
                                       Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" 
                                      Grid.Column="1" 
                                      Focusable="False" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                      Margin="{TemplateBinding Padding}" 
                                      RecognizesAccessKey="True" 
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="#0C81C7"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="#F7F7F7"/>
                                <Setter TargetName="optionMark" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.9" ScaleY="0.9" CenterX="0" CenterY="0"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Rounded Refresh Button-->
        <SolidColorBrush x:Key="Button.Static.Background" Color="#0070AE"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#0070AE"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                    x:Name="border"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}"
                    CornerRadius="20" SnapsToDevicePixels="true">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Image Source="/Images/reload.png" Width="35" Height="35" Margin="2"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!---checkbox-->


    </Window.Resources>
    <Grid Margin="0,10,4,-54.2">
        <Border BorderBrush="Black" BorderThickness="2" HorizontalAlignment="Left" Height="805" Margin="10,10,0,-29" VerticalAlignment="Top" Width="580">
            <Border.Background>
                <ImageBrush ImageSource="Frame 98.jpg"/>
            </Border.Background>
        </Border>
        <Label x:Name="lbl_ConnectionString" Content="Connection Setting" HorizontalAlignment="Center" Height="85" Margin="825,39,341,0" VerticalAlignment="Top" Width="362" FontSize="36" FontWeight="Bold"/>
        <Label x:Name="lbl_Communicationtype" Content="Communication Type :" HorizontalAlignment="Left" Margin="677,114,0,0" VerticalAlignment="Top" Height="50" Width="275" FontSize="24" FontWeight="SemiBold"/>
        <RadioButton x:Name="rb_Seriareader" Content="Serial Reader" HorizontalAlignment="Left" Margin="677,169,0,0" VerticalAlignment="Top" Height="40" Width="185" Checked="RadioButton_Checked" FontSize="24"/>
        <RadioButton x:Name="rb_TCip" Content="TCP/IP" HorizontalAlignment="Left" Margin="1002,169,0,0" VerticalAlignment="Top" Height="40" Width="185" Checked="RadioButton_Checked" FontSize="24"/>
        <RadioButton x:Name="rb_Wifi" Content="Wifi" HorizontalAlignment="Left" Margin="1312,169,0,0" VerticalAlignment="Top" Height="40" Width="75" Checked="RadioButton_Checked" FontSize="24"/>
        <RadioButton x:Name="rb_Usb" Content="USB" HorizontalAlignment="Left" Margin="677,239,0,0" VerticalAlignment="Top" Height="40" Width="185" Checked="RadioButton_Checked" FontSize="24"/>
        <RadioButton x:Name="rb_blutooth" Content="Blutooth" HorizontalAlignment="Left" Margin="1002,239,0,0" VerticalAlignment="Top" Height="40" Width="185" Checked="RadioButton_Checked" FontSize="24"/>
        <Label Content="Port Setup :" HorizontalAlignment="Left" Margin="677,293,0,0" VerticalAlignment="Top" Height="50" Width="275" FontSize="24" FontWeight="SemiBold"/>
        <ComboBox HorizontalAlignment="Left" Height="55" Margin="680,343,0,0" VerticalAlignment="Top" Width="710" BorderBrush="#FFD9D9D9" Text="Enter Here" Foreground="Black" AutomationProperties.Name="Enter Here" FontWeight="Bold">
            <ComboBox.Background>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFF0F0F0" Offset="0"/>
                    <GradientStop Color="White" Offset="1"/>
                </LinearGradientBrush>
            </ComboBox.Background>
            <ComboBoxItem Content="Enter Here" IsEnabled="True" Focusable="False" Visibility="Collapsed" />
            <ComboBoxItem Content="USB Serial Port (COM5)" />
            <ComboBoxItem Content="Intel(R) Active Management Technology - SOL (COM4)" />
        </ComboBox>
        <Label x:Name="lbl_Reader" Content="Reader Setting" HorizontalAlignment="Center" Height="65" Margin="892,434,341,0" VerticalAlignment="Top" Width="295" FontSize="36" FontWeight="Bold"/>
        <Label x:Name="lbl_CountryName" Content="Contry Name :" HorizontalAlignment="Left" Margin="683,490,0,0" VerticalAlignment="Top" Height="50" Width="275" FontSize="24" FontWeight="SemiBold"/>
        <ComboBox HorizontalAlignment="Left" Height="55" Margin="680,537,0,0" VerticalAlignment="Top" Width="710" BorderBrush="#FFD9D9D9" Text="Select Country " >
            <ComboBox.Background>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFF0F0F0" Offset="0"/>
                    <GradientStop Color="White" Offset="1"/>
                </LinearGradientBrush>
            </ComboBox.Background>
            <ComboBoxItem Content="Select Country" IsEnabled="False" Focusable="False" Visibility="Collapsed" />
            <ComboBoxItem Content="IN" />
            <ComboBoxItem Content="USA" />
            <ComboBoxItem Content="CN" />
            <ComboBoxItem Content="UK" />
            <ComboBoxItem Content="Canada" />
            <ComboBoxItem Content="Australia" />
            <ComboBoxItem Content="Germany" />
            <ComboBoxItem Content="France" />
            <ComboBoxItem Content="Japan" />
            <ComboBoxItem Content="South Korea" />
            <ComboBoxItem Content="India" />
            <!-- Add more countries as needed -->
        </ComboBox>
        <Label x:Name="lbl_Antenna" Content="Antenna :" HorizontalAlignment="Left" Margin="677,606,0,0" VerticalAlignment="Top" Height="50" Width="135" FontSize="24" FontWeight="SemiBold" />
        <Label x:Name="lbl_Protocols" Content="Protocols  :" HorizontalAlignment="Left" Margin="674,666,0,0" VerticalAlignment="Top" Height="50" Width="135" FontSize="24" FontWeight="SemiBold"/>
        <Button x:Name="btn_refresh" Content="Button" HorizontalAlignment="Left" Height="54" Margin="1410,349,0,0" VerticalAlignment="Top" Width="75" Style="{DynamicResource ButtonStyle1}"/>
        <Grid Margin="1094,713,141,80.8">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="51.2" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>




                <ColumnDefinition Width="107*"/>
            </Grid.ColumnDefinitions>

            <!-- Skip Button -->
            <Button x:Name="btn_Skip" Content="Skip"  HorizontalAlignment="Right" Grid.Row="1" Background="#FF99BEE0" BorderBrush="Gray" BorderThickness="0" Click="On_Skip" FontSize="22" Foreground="White" Height="56" VerticalAlignment="Center" Margin="0,5.2,151.8,-6" Width="140" RenderTransformOrigin="0.502,0.5">
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="-0.197"/>
                        <TranslateTransform Y="-0.001"/>
                    </TransformGroup>
                </Button.RenderTransform>
                <Button.Template>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" CornerRadius="20">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Button.Template>
            </Button>

            <!-- Next Button -->
            <Button x:Name="btn_Next" Content="Next" HorizontalAlignment="Right" Grid.Row="1" Background="#FF1762A8" BorderBrush="Gray" BorderThickness="1" Click="on_Next" FontSize="22 " Foreground="White" Margin="0,3.2,-0.2,-6.8" Width="137" RenderTransformOrigin="0.502,0.5" Height="58" VerticalAlignment="Top">
                <Button.Template>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" CornerRadius="20">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Button.Template>
            </Button>
        </Grid>
        <CheckBox Content="1" HorizontalAlignment="Left" Height="29" Margin="825,623,0,0" VerticalAlignment="Top" Width="55" FontSize="18"/>
        <CheckBox Content="2" HorizontalAlignment="Left" Height="29" Margin="885,621,0,0" VerticalAlignment="Top" Width="54"  FontSize="18"/>
        <CheckBox Content="3" HorizontalAlignment="Left" Height="29" Margin="944,621,0,0" VerticalAlignment="Top" Width="44"  FontSize="18"/>
        <CheckBox Content="4" HorizontalAlignment="Left" Height="29" Margin="1002,621,0,0" VerticalAlignment="Top" Width="39"  FontSize="18"/>
        <CheckBox Content="Gen2" HorizontalAlignment="Left" Height="29" Margin="825,679,0,0" VerticalAlignment="Top" Width="85" FontSize="20"/>

    </Grid>
</Window>